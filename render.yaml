services:
  - type: worker
    name: soom-worker
    region: frankfurt
    runtime: python
    plan: starter
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery -A celery_config worker --loglevel info --concurrency 4"
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: redis
          type: redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
         name: postgres
         property: connectionString

          
  - type: web
    name: soom
    plan: starter
    region: frankfurt
    runtime: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "gunicorn app:app"
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: redis
          type: redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
         name: postgres
         property: connectionString


  - type: web
    name: soom-monitor
    region: frankfurt
    plan: free
    runtime: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery flower --app tasks --loglevel info"
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
         type: redis
         name: redis
         property: connectionString
      
  - type: redis
    name: redis
    region: frankfurt
    plan: free # Change to starter to ensure tasks are not lost upon restart
    maxmemoryPolicy: noeviction # recommended policy for queues
    ipAllowList: # Default: allows all connections
      - source: 86.18.69.194
        description: home

databases:
  - name: postgres
    region: frankfurt 
    plan: basic-256mb
    databaseName: soom
    user: app_user # Default: generated value based on name
    ipAllowList: # Default: allows all connections
      - source: 86.18.69.194
        description: home